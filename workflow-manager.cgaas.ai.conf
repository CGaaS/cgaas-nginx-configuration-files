    server {
       
        server_name workflow-manager.cgaas.ai;


        location / {
            proxy_pass       http://localhost:3025;
            proxy_redirect   off;
            proxy_set_header Host $host;
            proxy_set_header Proxy "";

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;

            # log files
            access_log /var/log/nginx/workflow-manager.cgaas.ai.access.log;
            error_log /var/log/nginx/workflow-manager.cgaas.ai.error.log;
        }

	# WebSocket location block
   	location /WorkflowManager/api/ws {
            proxy_pass http://localhost:3025; # Your Go app WebSocket server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        # Optional - WebSocket read timeout
       	    proxy_read_timeout 86400;
    }
		
	



    

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/workflow-manager.cgaas.ai/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/workflow-manager.cgaas.ai/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
    server {
    if ($host = workflow-manager.cgaas.ai) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


       
        server_name workflow-manager.cgaas.ai;
    listen 80;
    return 404; # managed by Certbot


}
